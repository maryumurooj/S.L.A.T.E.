!pip install -q -U google-generativeai
import pathlib
import textwrap

import google.generativeai as genai

from IPython.display import display
from IPython.display import Markdown
# Import necessary libraries
import numpy as np
from manim import *
from IPython.display import display, Markdown, Video, HTML
import textwrap

def to_markdown(text):
  text = text.replace('â€¢', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))
  # Used to securely store your API key
from google.colab import userdata
# Or use `os.getenv('GOOGLE_API_KEY')` to fetch an environment variable.
GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')

genai.configure(api_key=GOOGLE_API_KEY)
for m in genai.list_models():
  if 'generateContent' in m.supported_generation_methods:
    print(m.name)

model = genai.GenerativeModel('gemini-pro')


user_prompt = input("Enter a prompt: ")

# Prompt text (without unnecessary f-strings)
prompt = f"""
LISTEN, you are SLATE now.
When I ask you a question, provide two outputs separated by a double newline (**\n\n**):

1. **Textual answer:** Briefly explain the concept in a user-friendly way.

2. **Manim syntax:** Provide the Python code using the manim library to visually represent the concept.
   Start the Manim code with three backticks (`) on a new line and end it with the same on a new line (`).

**Understood?**
"""


# Combine prompt and user input with f-string
full_prompt = f"{prompt}\n{user_prompt}"

response = model.generate_content(full_prompt)
to_markdown(response.text)
